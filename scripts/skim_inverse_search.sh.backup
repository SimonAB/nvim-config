#!/bin/bash

# VimTeX Inverse Search Script for Warp.app and modern terminals
# Usage: skim_inverse_search.sh LINE_NUMBER FILE_PATH
# Note: Skim only provides line numbers, not column information

LINE="$1"
FILE="$2"

# Debug logging
echo "$(date): Inverse search called with LINE=$LINE, FILE=$FILE" >> /tmp/inverse_search.log

# Method 1: Try nvr first if server socket exists
if command -v /opt/homebrew/bin/nvr &> /dev/null && [ -S "/tmp/nvim_server" ]; then
    echo "$(date): Trying nvr with existing server" >> /tmp/inverse_search.log
    # First, open the file if it's not already open
    /opt/homebrew/bin/nvr --servername /tmp/nvim_server --remote-silent "$FILE" 2>&1 >> /tmp/inverse_search.log
    
    # Jump to the line
    /opt/homebrew/bin/nvr --servername /tmp/nvim_server --remote-send ":$LINE<CR>" 2>&1 >> /tmp/inverse_search.log
    echo "$(date): Positioned cursor at line $LINE" >> /tmp/inverse_search.log
    
    # Focus Warp terminal
    osascript -e 'tell application "Warp" to activate' 2>/dev/null
    echo "$(date): nvr command completed" >> /tmp/inverse_search.log
    exit 0
fi

# Method 2: Try VimTeX's VimtexInverseSearch command
echo "$(date): Trying VimtexInverseSearch" >> /tmp/inverse_search.log
/opt/homebrew/bin/nvim --headless -c "VimtexInverseSearch $LINE '$FILE'" 2>&1 >> /tmp/inverse_search.log

# Method 3: Check if any nvim instance is running
if pgrep nvim > /dev/null; then
    echo "$(date): Neovim instance found, focusing Warp" >> /tmp/inverse_search.log
    # Focus Warp terminal where nvim is likely running
    osascript -e 'tell application "Warp" to activate' 2>/dev/null
else
    echo "$(date): No nvim instance found, opening new instance" >> /tmp/inverse_search.log
    # Open new nvim instance in Warp as fallback
    osascript -e "
        tell application \"Warp\"
            activate
            delay 0.5
            tell application \"System Events\"
                keystroke \"nvim +$LINE \"$FILE\"\" 
                key code 36
            end tell
        end tell
    " 2>&1 >> /tmp/inverse_search.log
fi
